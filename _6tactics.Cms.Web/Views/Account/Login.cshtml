@model _6tactics.AspIdentity.ViewModels.Account.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<div class="container">
    <div class="row">
        <h3>@ViewBag.Title</h3>
    </div>

    <p class="text-success">@ViewBag.StatusMessage</p>

    <hr />
</div>

<div class="container">
    <div class="row">
        @*<div class="col-md-8">*@
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group">
                    @Html.Label("Solve", new { @class = "col-md-2 control-label" })
                    <div class="col-md-2">
                        <div style="font-weight: bolder;">
                            @Html.TextBoxFor(m => m.Captcha, new { @class = "form-control", @readonly = "readonly", style = "text-align: center;" })
                        </div>
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.CaptchaCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CaptchaCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe, new { @style = "margin-top: -4px!important;" })
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-success" />
                    </div>
                </div>
                @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.ActionLink("Register as a new user", "Register", null, htmlAttributes: new { @class = "btn btn-primary" })
                            @Html.ActionLink("Forgot your password?", "ForgotPassword", null, htmlAttributes: new { @class = "btn btn-primary" })
                        </div>
                    </div>*@
            }

        </section>

        @*</div>*@
        @*<div class="col-md-4">
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>*@
    </div>
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $.validator.unobtrusive.addValidation('form');

        function reloadCaptcha() {
            $.getJSON('/ajax/regeneratecaptcha?captchaFor=Captcha', function (newCaptcha) {
                $('#Captcha').val(newCaptcha);
                $('#CaptchaCode').val('');
            });
        }

        function reloadCaptchaAndRevalidateForm() {
            reloadCaptcha();
            $('form').valid();
        }


        $('#CaptchaCode').on('keyup', function (e) {
            e.stopPropagation();
        });

        $('#CaptchaCode').rules("add", {
            remote: {
                url: '/ajax/iscaptchavalid',
                data: {
                    'captchaFor': function () { return 'Captcha' },
                    'solution': function () { return $('#CaptchaCode').val() }
                },
                complete: function (data) {
                    if (data.responseText !== "true") {
                        reloadCaptchaAndRevalidateForm();
                    }
                }
            }
        });

    </script>
}
